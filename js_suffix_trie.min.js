var JsSuffixTrie;
JsSuffixTrie=function(){function f(a){this.structure=a!=null?a:{};this.count=0}f.prototype.add=function(a){var c,b,e,d,g;g=this.structure;e=a.length;for(b=0;b++<e;){c=a[b];d=g[c];if(!d){g[c]={};g=g[c]}}if(g.terminator)return false;else{g.terminator=true;this.count++;return true}};f.prototype.remove=function(a){var c,b,e,d;d=this.structure;e=a.length;for(b=0;b++<e;){c=a[b];d=d[c];if(!d)return false}if(d.terminator){delete d.terminator;this.count--;return true}else return false};f.prototype.contains=function(a){var c,
b,e,d;d=this.structure;e=a.length;for(b=0;b++<e;){c=a[b];d=d[c];if(!d)return false}return d.terminator===true};f.prototype.each=function(a){return f.each(a,this.structure,0,"")};f.each=function(a,c,b,e){var d;c.terminator&&a(b++,e);for(d in c)b=this.each(a,c[d],b,e+d);return b};f.prototype.size=function(){return this.count};f.prototype.calculateSize=function(a){var c,b;if(a==null)a=this.structure;b=a.terminator?1:0;for(c in a)b+=this.calculateSize(a[c]);return b};f.fromArray=function(a){var c,b,e;
e=new DictionaryTree;b=a.length;for(c=0;c++<b;)e.add(a[c]);e.calculateSize();return e};f.prototype.toArray=function(){var a;a=[];this.each(function(c,b){return a[c]=b});return a};f.fromJSON=function(a){a=new DictionaryTree(JSON.parse(a));a.calculateSize();return a};f.prototype.toJSON=function(){return JSON.stringify(this.structure)};return f}();
